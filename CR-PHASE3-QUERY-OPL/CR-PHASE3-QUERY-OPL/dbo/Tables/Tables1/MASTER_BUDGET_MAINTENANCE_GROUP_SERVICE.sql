CREATE TABLE [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE] (
    [ID]                            BIGINT          IDENTITY (1, 1) NOT NULL,
    [BUDGET_MAINTENANCE_CODE]       NVARCHAR (50)   NOT NULL,
    [BUDGET_MAINTENANCE_GROUP_CODE] NVARCHAR (50)   NULL,
    [GROUP_CODE]                    NVARCHAR (50)   NOT NULL,
    [SERVICE_CODE]                  NVARCHAR (50)   NULL,
    [SERVICE_DESCRIPTION]           NVARCHAR (250)  NULL,
    [UNIT_QTY]                      INT             NOT NULL,
    [UNIT_COST]                     DECIMAL (18, 2) NOT NULL,
    [LABOR_COST]                    DECIMAL (18, 2) NOT NULL,
    [REPLACEMENT_CYCLE]             INT             NOT NULL,
    [REPLACEMENT_TYPE]              NVARCHAR (10)   NOT NULL,
    [TOTAL_COST]                    DECIMAL (18, 2) NOT NULL,
    [CRE_DATE]                      DATETIME        NOT NULL,
    [CRE_BY]                        NVARCHAR (15)   NOT NULL,
    [CRE_IP_ADDRESS]                NVARCHAR (15)   NOT NULL,
    [MOD_DATE]                      DATETIME        NOT NULL,
    [MOD_BY]                        NVARCHAR (15)   NOT NULL,
    [MOD_IP_ADDRESS]                NVARCHAR (15)   NOT NULL,
    CONSTRAINT [PK_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE] PRIMARY KEY CLUSTERED ([ID] ASC),
    CONSTRAINT [FK_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE_MASTER_BUDGET_MAINTENANCE] FOREIGN KEY ([BUDGET_MAINTENANCE_CODE]) REFERENCES [dbo].[MASTER_BUDGET_MAINTENANCE] ([CODE]),
    CONSTRAINT [FK_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE] FOREIGN KEY ([BUDGET_MAINTENANCE_GROUP_CODE]) REFERENCES [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP] ([CODE])
);


GO
    
			CREATE TRIGGER [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE_Insert_Audit] 
			ON [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE]    
			FOR INSERT    
			AS    
			
 INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE]
([ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT CONVERT(bigint,[ID]) as [ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'New','Insert',SUSER_SNAME(),getdate(),''  FROM INSERTED 
GO
    
			CREATE TRIGGER [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE_Delete_Audit]    
			ON [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE]    
			FOR DELETE    
			AS   
  INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE]
([ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT CONVERT(bigint,[ID]) as [ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'Old','Delete',SUSER_SNAME(),getdate(),''  FROM DELETED
GO
    
			CREATE TRIGGER [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE_Update_Audit]      
			ON [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE]    
			FOR UPDATE    
			AS 
   
			 
			    DECLARE @UpdatedCols varchar(max) 
			 
			   SELECT @UpdatedCols =  CASE WHEN UPDATE([ID]) THEN '[ID]-' ELSE '' END + 
CASE WHEN UPDATE([BUDGET_MAINTENANCE_CODE]) THEN '[BUDGET_MAINTENANCE_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([BUDGET_MAINTENANCE_GROUP_CODE]) THEN '[BUDGET_MAINTENANCE_GROUP_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([GROUP_CODE]) THEN '[GROUP_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([SERVICE_CODE]) THEN '[SERVICE_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([SERVICE_DESCRIPTION]) THEN '[SERVICE_DESCRIPTION]-' ELSE '' END + 
CASE WHEN UPDATE([UNIT_QTY]) THEN '[UNIT_QTY]-' ELSE '' END + 
CASE WHEN UPDATE([UNIT_COST]) THEN '[UNIT_COST]-' ELSE '' END + 
CASE WHEN UPDATE([LABOR_COST]) THEN '[LABOR_COST]-' ELSE '' END + 
CASE WHEN UPDATE([REPLACEMENT_CYCLE]) THEN '[REPLACEMENT_CYCLE]-' ELSE '' END + 
CASE WHEN UPDATE([REPLACEMENT_TYPE]) THEN '[REPLACEMENT_TYPE]-' ELSE '' END + 
CASE WHEN UPDATE([TOTAL_COST]) THEN '[TOTAL_COST]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_DATE]) THEN '[CRE_DATE]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_BY]) THEN '[CRE_BY]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_IP_ADDRESS]) THEN '[CRE_IP_ADDRESS]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_DATE]) THEN '[MOD_DATE]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_BY]) THEN '[MOD_BY]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_IP_ADDRESS]) THEN '[MOD_IP_ADDRESS]-' ELSE '' END  
			    
			   IF LTRIM(RTRIM(@UpdatedCols)) <> '' 
			   BEGIN 
			          INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE]
([ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT CONVERT(bigint,[ID]) as [ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'New','Update',SUSER_SNAME(),getdate(),@UpdatedCols  FROM INSERTED     
			    
			          INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP_SERVICE]
([ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT CONVERT(bigint,[ID]) as [ID],[BUDGET_MAINTENANCE_CODE],[BUDGET_MAINTENANCE_GROUP_CODE],[GROUP_CODE],[SERVICE_CODE],[SERVICE_DESCRIPTION],[UNIT_QTY],[UNIT_COST],[LABOR_COST],[REPLACEMENT_CYCLE],[REPLACEMENT_TYPE],[TOTAL_COST],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'Old','Update',SUSER_SNAME(),getdate(),@UpdatedCols  FROM DELETED  
			   END