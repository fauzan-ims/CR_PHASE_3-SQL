CREATE TABLE [dbo].[MASTER_HE_UNIT] (
    [CODE]                         NVARCHAR (50)  NOT NULL,
    [HE_CATEGORY_CODE]             NVARCHAR (50)  NOT NULL,
    [HE_SUBCATEGORY_CODE]          NVARCHAR (50)  NOT NULL,
    [HE_MERK_CODE]                 NVARCHAR (50)  NOT NULL,
    [HE_MODEL_CODE]                NVARCHAR (50)  NOT NULL,
    [HE_TYPE_CODE]                 NVARCHAR (50)  NOT NULL,
    [HE_NAME]                      NVARCHAR (250) NOT NULL,
    [DESCRIPTION]                  NVARCHAR (250) NOT NULL,
    [USEFULL_LIFE]                 INT            CONSTRAINT [DF_MASTER_HE_UNIT_USEFULL_LIFE] DEFAULT ((0)) NULL,
    [CATEGORY_TYPE]                NVARCHAR (20)  NULL,
    [CLASS_TYPE_CODE]              NVARCHAR (50)  NULL,
    [CLASS_TYPE_NAME]              NVARCHAR (250) NULL,
    [INSURANCE_ASSET_TYPE_CODE]    NVARCHAR (50)  NULL,
    [INSURANCE_ASSET_TYPE_NAME]    NVARCHAR (250) NULL,
    [REGISTRATION_CLASS_TYPE_CODE] NVARCHAR (50)  NULL,
    [REGISTRATION_CLASS_TYPE_NAME] NVARCHAR (250) NULL,
    [IS_SPAF]                      NVARCHAR (1)   CONSTRAINT [DF_MASTER_HE_UNIT_IS_SPAF] DEFAULT ((0)) NULL,
    [SPAF_PCT]                     DECIMAL (9, 6) CONSTRAINT [DF_MASTER_HE_UNIT_SPAF_PCT] DEFAULT ((0)) NULL,
    [IS_ACTIVE]                    NVARCHAR (1)   NOT NULL,
    [CRE_DATE]                     DATETIME       NOT NULL,
    [CRE_BY]                       NVARCHAR (15)  NOT NULL,
    [CRE_IP_ADDRESS]               NVARCHAR (15)  NOT NULL,
    [MOD_DATE]                     DATETIME       NOT NULL,
    [MOD_BY]                       NVARCHAR (15)  NOT NULL,
    [MOD_IP_ADDRESS]               NVARCHAR (15)  NOT NULL,
    CONSTRAINT [PK_MASTER_HE_UNIT] PRIMARY KEY CLUSTERED ([CODE] ASC),
    CONSTRAINT [FK_MASTER_HE_UNIT_MASTER_HE_CATEGORY] FOREIGN KEY ([HE_CATEGORY_CODE]) REFERENCES [dbo].[MASTER_HE_CATEGORY] ([CODE]),
    CONSTRAINT [FK_MASTER_HE_UNIT_MASTER_HE_MERK] FOREIGN KEY ([HE_MERK_CODE]) REFERENCES [dbo].[MASTER_HE_MERK] ([CODE]),
    CONSTRAINT [FK_MASTER_HE_UNIT_MASTER_HE_MODEL] FOREIGN KEY ([HE_MODEL_CODE]) REFERENCES [dbo].[MASTER_HE_MODEL] ([CODE]),
    CONSTRAINT [FK_MASTER_HE_UNIT_MASTER_HE_SUBCATEGORY] FOREIGN KEY ([HE_SUBCATEGORY_CODE]) REFERENCES [dbo].[MASTER_HE_SUBCATEGORY] ([CODE]),
    CONSTRAINT [FK_MASTER_HE_UNIT_MASTER_HE_TYPE] FOREIGN KEY ([HE_TYPE_CODE]) REFERENCES [dbo].[MASTER_HE_TYPE] ([CODE]) ON DELETE CASCADE ON UPDATE CASCADE
);


GO
    
			CREATE TRIGGER [dbo].[MASTER_HE_UNIT_Delete_Audit]    
			ON [dbo].[MASTER_HE_UNIT]    
			FOR DELETE    
			AS   
  INSERT INTO [dbo].[Z_AUDIT_MASTER_HE_UNIT]
([CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'Old','Delete',SUSER_SNAME(),getdate(),''  FROM DELETED
GO
    
			CREATE TRIGGER [dbo].[MASTER_HE_UNIT_Update_Audit]      
			ON [dbo].[MASTER_HE_UNIT]    
			FOR UPDATE    
			AS 
   
			 
			    DECLARE @UpdatedCols varchar(max) 
			 
			   SELECT @UpdatedCols =  CASE WHEN UPDATE([CODE]) THEN '[CODE]-' ELSE '' END + 
CASE WHEN UPDATE([HE_CATEGORY_CODE]) THEN '[HE_CATEGORY_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([HE_SUBCATEGORY_CODE]) THEN '[HE_SUBCATEGORY_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([HE_MERK_CODE]) THEN '[HE_MERK_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([HE_MODEL_CODE]) THEN '[HE_MODEL_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([HE_TYPE_CODE]) THEN '[HE_TYPE_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([HE_NAME]) THEN '[HE_NAME]-' ELSE '' END + 
CASE WHEN UPDATE([DESCRIPTION]) THEN '[DESCRIPTION]-' ELSE '' END + 
CASE WHEN UPDATE([USEFULL_LIFE]) THEN '[USEFULL_LIFE]-' ELSE '' END + 
CASE WHEN UPDATE([CATEGORY_TYPE]) THEN '[CATEGORY_TYPE]-' ELSE '' END + 
CASE WHEN UPDATE([CLASS_TYPE_CODE]) THEN '[CLASS_TYPE_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([CLASS_TYPE_NAME]) THEN '[CLASS_TYPE_NAME]-' ELSE '' END + 
CASE WHEN UPDATE([INSURANCE_ASSET_TYPE_CODE]) THEN '[INSURANCE_ASSET_TYPE_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([INSURANCE_ASSET_TYPE_NAME]) THEN '[INSURANCE_ASSET_TYPE_NAME]-' ELSE '' END + 
CASE WHEN UPDATE([REGISTRATION_CLASS_TYPE_CODE]) THEN '[REGISTRATION_CLASS_TYPE_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([REGISTRATION_CLASS_TYPE_NAME]) THEN '[REGISTRATION_CLASS_TYPE_NAME]-' ELSE '' END + 
CASE WHEN UPDATE([IS_SPAF]) THEN '[IS_SPAF]-' ELSE '' END + 
CASE WHEN UPDATE([SPAF_PCT]) THEN '[SPAF_PCT]-' ELSE '' END + 
CASE WHEN UPDATE([IS_ACTIVE]) THEN '[IS_ACTIVE]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_DATE]) THEN '[CRE_DATE]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_BY]) THEN '[CRE_BY]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_IP_ADDRESS]) THEN '[CRE_IP_ADDRESS]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_DATE]) THEN '[MOD_DATE]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_BY]) THEN '[MOD_BY]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_IP_ADDRESS]) THEN '[MOD_IP_ADDRESS]-' ELSE '' END  
			    
			   IF LTRIM(RTRIM(@UpdatedCols)) <> '' 
			   BEGIN 
			          INSERT INTO [dbo].[Z_AUDIT_MASTER_HE_UNIT]
([CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'New','Update',SUSER_SNAME(),getdate(),@UpdatedCols  FROM INSERTED     
			    
			          INSERT INTO [dbo].[Z_AUDIT_MASTER_HE_UNIT]
([CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'Old','Update',SUSER_SNAME(),getdate(),@UpdatedCols  FROM DELETED  
			   END
GO
    
			CREATE TRIGGER [dbo].[MASTER_HE_UNIT_Insert_Audit] 
			ON [dbo].[MASTER_HE_UNIT]    
			FOR INSERT    
			AS    
			
 INSERT INTO [dbo].[Z_AUDIT_MASTER_HE_UNIT]
([CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[HE_CATEGORY_CODE],[HE_SUBCATEGORY_CODE],[HE_MERK_CODE],[HE_MODEL_CODE],[HE_TYPE_CODE],[HE_NAME],[DESCRIPTION],[USEFULL_LIFE],[CATEGORY_TYPE],[CLASS_TYPE_CODE],[CLASS_TYPE_NAME],[INSURANCE_ASSET_TYPE_CODE],[INSURANCE_ASSET_TYPE_NAME],[REGISTRATION_CLASS_TYPE_CODE],[REGISTRATION_CLASS_TYPE_NAME],[IS_SPAF],[SPAF_PCT],[IS_ACTIVE],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'New','Insert',SUSER_SNAME(),getdate(),''  FROM INSERTED 
GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Kode atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'CODE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Kode kategori atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'HE_CATEGORY_CODE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Kode sub kategori atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'HE_SUBCATEGORY_CODE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Kode merk atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'HE_MERK_CODE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Kode model atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'HE_MODEL_CODE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Kode tipe atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'HE_TYPE_CODE';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Nama atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'HE_NAME';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Deskripsi atas data master unit HE tersebut', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'DESCRIPTION';


GO
EXECUTE sp_addextendedproperty @name = N'MS_Description', @value = N'Status dari data master unit HE, apakah data tersebut berstatus aktif dan dapat digunakan pada sistem?', @level0type = N'SCHEMA', @level0name = N'dbo', @level1type = N'TABLE', @level1name = N'MASTER_HE_UNIT', @level2type = N'COLUMN', @level2name = N'IS_ACTIVE';

