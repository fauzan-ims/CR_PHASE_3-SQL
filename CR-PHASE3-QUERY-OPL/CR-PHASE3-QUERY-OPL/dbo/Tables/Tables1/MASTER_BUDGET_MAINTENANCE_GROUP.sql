CREATE TABLE [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP] (
    [CODE]                    NVARCHAR (50)  NOT NULL,
    [BUDGET_MAINTENANCE_CODE] NVARCHAR (50)  NOT NULL,
    [GROUP_CODE]              NVARCHAR (50)  NOT NULL,
    [GROUP_DESCRIPTION]       NVARCHAR (250) NOT NULL,
    [PROBABILITY_PCT]         DECIMAL (9, 6) NOT NULL,
    [CRE_DATE]                DATETIME       NOT NULL,
    [CRE_BY]                  NVARCHAR (15)  NOT NULL,
    [CRE_IP_ADDRESS]          NVARCHAR (15)  NOT NULL,
    [MOD_DATE]                DATETIME       NOT NULL,
    [MOD_BY]                  NVARCHAR (15)  NOT NULL,
    [MOD_IP_ADDRESS]          NVARCHAR (15)  NOT NULL,
    CONSTRAINT [PK_MASTER_BUDGET_MAINTENANCE_GROUP] PRIMARY KEY CLUSTERED ([CODE] ASC),
    CONSTRAINT [FK_MASTER_BUDGET_MAINTENANCE_GROUP_MASTER_BUDGET_MAINTENANCE] FOREIGN KEY ([BUDGET_MAINTENANCE_CODE]) REFERENCES [dbo].[MASTER_BUDGET_MAINTENANCE] ([CODE]),
    CONSTRAINT [UNIQ_KEY_MASTER_BUDGET_MAINTENANCE_GROUP] UNIQUE NONCLUSTERED ([CODE] ASC)
);


GO
    
			CREATE TRIGGER [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_Update_Audit]      
			ON [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP]    
			FOR UPDATE    
			AS 
   
			 
			    DECLARE @UpdatedCols varchar(max) 
			 
			   SELECT @UpdatedCols =  CASE WHEN UPDATE([CODE]) THEN '[CODE]-' ELSE '' END + 
CASE WHEN UPDATE([BUDGET_MAINTENANCE_CODE]) THEN '[BUDGET_MAINTENANCE_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([GROUP_CODE]) THEN '[GROUP_CODE]-' ELSE '' END + 
CASE WHEN UPDATE([GROUP_DESCRIPTION]) THEN '[GROUP_DESCRIPTION]-' ELSE '' END + 
CASE WHEN UPDATE([PROBABILITY_PCT]) THEN '[PROBABILITY_PCT]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_DATE]) THEN '[CRE_DATE]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_BY]) THEN '[CRE_BY]-' ELSE '' END + 
CASE WHEN UPDATE([CRE_IP_ADDRESS]) THEN '[CRE_IP_ADDRESS]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_DATE]) THEN '[MOD_DATE]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_BY]) THEN '[MOD_BY]-' ELSE '' END + 
CASE WHEN UPDATE([MOD_IP_ADDRESS]) THEN '[MOD_IP_ADDRESS]-' ELSE '' END  
			    
			   IF LTRIM(RTRIM(@UpdatedCols)) <> '' 
			   BEGIN 
			          INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP]
([CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'New','Update',SUSER_SNAME(),getdate(),@UpdatedCols  FROM INSERTED     
			    
			          INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP]
([CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'Old','Update',SUSER_SNAME(),getdate(),@UpdatedCols  FROM DELETED  
			   END
GO
    
			CREATE TRIGGER [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_Insert_Audit] 
			ON [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP]    
			FOR INSERT    
			AS    
			
 INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP]
([CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'New','Insert',SUSER_SNAME(),getdate(),''  FROM INSERTED 
GO
    
			CREATE TRIGGER [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP_Delete_Audit]    
			ON [dbo].[MASTER_BUDGET_MAINTENANCE_GROUP]    
			FOR DELETE    
			AS   
  INSERT INTO [dbo].[Z_AUDIT_MASTER_BUDGET_MAINTENANCE_GROUP]
([CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],AuditDataState,AuditDMLAction,AuditUser,AuditDateTime,UpdateColumns)
SELECT [CODE],[BUDGET_MAINTENANCE_CODE],[GROUP_CODE],[GROUP_DESCRIPTION],[PROBABILITY_PCT],[CRE_DATE],[CRE_BY],[CRE_IP_ADDRESS],[MOD_DATE],[MOD_BY],[MOD_IP_ADDRESS],'Old','Delete',SUSER_SNAME(),getdate(),''  FROM DELETED